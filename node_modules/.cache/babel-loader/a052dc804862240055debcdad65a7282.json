{"ast":null,"code":"var _jsxFileName = \"/home/pedro/estudos/react/tutorial/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nfunction BoilingVerdict(props) {\n  if (props.celsius >= 100) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6,\n        columnNumber: 12\n      }\n    }, \"The water would boil.\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 10\n    }\n  }, \"The water would not boil.\");\n}\n\nconst scaleNames = {\n  c: 'Celsius',\n  f: 'Fahrenheit'\n};\n\nfunction toCelsius(fahrenheit) {\n  return (fahrenheit - 32) * 5 / 9;\n}\n\nfunction toFahrenheit(celsius) {\n  return celsius * 9 / 5 + 32;\n}\n\nfunction tryConvert(temperature, convert) {\n  const input = parseFloat(temperature);\n\n  if (Number.isNaN(input)) {\n    return '';\n  }\n\n  const output = convert(input);\n  const rounded = Math.round(output * 1000) / 1000;\n  return rounded.toString();\n}\n\nclass TemperatureInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    this.props.onTemperatureChange(e.target.value);\n  }\n\n  render() {\n    const temperature = this.props.temperature;\n    const scale = this.props.scale;\n    return /*#__PURE__*/React.createElement(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"legend\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, \"Enter temperature in \", scaleNames[scale], \":\"), /*#__PURE__*/React.createElement(\"input\", {\n      value: temperature,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleCelsiusChange = this.handleCelsiusChange.bind(this);\n    this.handleFahrenheitChange = this.handleFahrenheitChange.bind(this);\n    this.state = {\n      temperature: '',\n      scale: 'c'\n    };\n  }\n\n  handleCelsiusChange(temperature) {\n    this.setState({\n      scale: 'c',\n      temperature\n    });\n  }\n\n  handleFahrenheitChange(temperature) {\n    this.setState({\n      scale: 'f',\n      temperature\n    });\n  }\n\n  render() {\n    const scale = this.state.scale;\n    const temperature = this.state.temperature;\n    const celsius = scale === 'f';\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TemperatureInput, {\n      scale: \"c\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(TemperatureInput, {\n      scale: \"f\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(Calculator, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/home/pedro/estudos/react/tutorial/src/index.js"],"names":["React","ReactDOM","BoilingVerdict","props","celsius","scaleNames","c","f","toCelsius","fahrenheit","toFahrenheit","tryConvert","temperature","convert","input","parseFloat","Number","isNaN","output","rounded","Math","round","toString","TemperatureInput","Component","constructor","handleChange","bind","e","onTemperatureChange","target","value","render","scale","Calculator","handleCelsiusChange","handleFahrenheitChange","state","setState","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom';\n\nfunction BoilingVerdict(props) {\n  if (props.celsius >= 100){\n    return <p>The water would boil.</p>;\n  }\n  return <p>The water would not boil.</p>;\n}\n\nconst scaleNames = {\n  c: 'Celsius',\n  f: 'Fahrenheit'\n};\n\nfunction toCelsius(fahrenheit) {\n  return (fahrenheit - 32) * 5 / 9;\n}\n\nfunction toFahrenheit(celsius) {\n  return (celsius * 9 / 5) + 32;\n}\n\nfunction tryConvert(temperature, convert){\n  const input = parseFloat(temperature);\n  if (Number.isNaN(input)){\n    return '';\n  }\n  const output = convert(input);\n  const rounded = Math.round(output * 1000) / 1000;\n  return rounded.toString();\n}\n\n\nclass TemperatureInput extends React.Component {\n  constructor(props){\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    this.props.onTemperatureChange(e.target.value);\n  }\n  render(){\n    const temperature = this.props.temperature;\n    const scale = this.props.scale;\n    return (\n      <fieldset>\n        <legend>Enter temperature in {scaleNames[scale]}:</legend>\n        <input value={temperature}\n          onChange={this.handleChange}\n        />\n      </fieldset>\n    );\n  }\n}\n\nclass Calculator extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.handleCelsiusChange = this.handleCelsiusChange.bind(this);\n    this.handleFahrenheitChange = this.handleFahrenheitChange.bind(this);\n    this.state = {temperature: '', scale: 'c'};\n  }\n\n  handleCelsiusChange(temperature){\n    this.setState({scale:'c', temperature});\n  }\n\n  handleFahrenheitChange(temperature){\n    this.setState({scale: 'f', temperature});\n  }\n\n  render(){\n    const scale = this.state.scale;\n    const temperature = this.state.temperature;\n    const celsius = scale === 'f' \n    return(\n      <div>\n        <TemperatureInput scale=\"c\" />\n        <TemperatureInput scale=\"f\" />\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<Calculator />, document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}